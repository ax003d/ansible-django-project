---

- name: install python3-venv
  apt:
    name: python3-venv
    state: present
    update_cache: yes
  become: yes
  become_user: root

- name: Django app | Dependencies | Memcached | Install Apt libs
  tags: [django-dependencies, django-initial]
  when: django_memcached_locations is defined
  apt: name={{ item }} state=present
  with_items:
    - python3-dev
    - libpq-dev
    - libsasl2-dev
    - zlib1g-dev
    - libmemcached-dev
  become: true
  become_user: root

- name: install python3 requirements
  tags: [requirements]
  shell: |
    . /home/{{ user }}/pyenv/versions/env-admission/bin/activate
    pip install -U pip
    pip install -r requirements.txt
  args:
    chdir: "{{ project_home }}/src/"
  become: yes
  become_user: "{{ user }}"

- name: Django app | Source code | Make sure directory exists
  tags: [django-app-code, django-initial]
  file:
    path: "{{ django_app_root }}"
    state: directory

- name: Django app | Source code | Push code
  tags: [django-app-code]
  when: django_push_mode == "sync"
  synchronize:
    src: "{{ django_local_repo_root }}"
    dest: "{{ django_app_root }}"
  notify:
    - python code updated
  become: true

- name: Django app | Source code | Push code| Make pushed code owned by user
  tags: [django-app-code]
  when: django_push_mode == "sync"
  command: "chown -R {{ user }}:{{ group }} {{ django_app_root }}"
  notify:
    - python code updated
  become: true
  become_user: root

- name: Django app | Source code | Notify handlers about changed code
  tags: [django-app-code, django-settings]
  when: django_push_mode == "none"
  command: /bin/true
  notify:
    - python code updated

- name: Django app | Settings | Upload settings template
  tags: [django-settings]
  template:
    src=templates/django_settings.py.j2
    dest={{ django_app_root }}/{{ django_project_module }}/settings.py
  notify:
    - python code updated

- name: Django app | Settings | Append extra settings
  tags: [django-settings]
  blockinfile:
    path: "{{ django_app_root }}/{{ django_project_module }}/settings.py"
    block: "{{ django_settings_extra }}"

- name: Django app | Migrate database
  tags: [django-migrations]
  shell: |
    . /home/{{ user }}/pyenv/versions/env-admission/bin/activate
    python manage.py migrate
  args:
    chdir: "{{ project_home }}/src/"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

- name: Django app | Deployment checklist
  shell: |
    . /home/{{ user }}/pyenv/versions/env-admission/bin/activate
    python manage.py check --deploy
  args:
    chdir: "{{ project_home }}/src/"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

- name: Django app | Collect static assets
  tags: [django-static]
  shell: |
    . /home/{{ user }}/pyenv/versions/env-admission/bin/activate
    python manage.py collectstatic --no-input
  args:
    chdir: "{{ project_home }}/src/"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

- name: Django app | Load initial data
  tags: [django-loaddata]
  when: django_initial_data_fixture.load|bool
  shell: |
    . /home/{{ user }}/pyenv/versions/env-admission/bin/activate
    python manage.py loaddata {{ django_initial_data_fixture.path }}
  args:
    chdir: "{{ project_home }}/src/"
  become: yes
  become_user: "{{ user }}"
  ignore_errors: yes

- name: WSGI server | Install Gunicorn
  apt: name=gunicorn state=present
  become: true
  become_user: root