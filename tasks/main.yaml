---

- name: Django app | Source code | Make sure directory exists
  file:
    path: "{{ django_app_root }}"
    state: directory

- name: Django app | Source code | Push code
  when: django_push_mode == "sync"
  synchronize:
    src: "{{ django_local_repo_root }}"
    dest: "{{ django_app_root }}"
  notify:
    - python code updated

- name: Django app | Dependencies | Pip | Make sure itself is installed
  apt: name=python-pip state=installed
  become: true

- name: Django app | Dependencies | Pip | Make sure itself is latest
  pip: name=pip state=latest
  become: true

- name: Django app | Dependencies | Pip | Install | Custom requirements
  pip: requirements={{ django_pip_dependencies }}
  become: true
  notify:
    - python code updated

- name: Django app | Dependencies | Pip | Install | Debug requirements
  when: django_debug|bool
  pip: name={{ item }} state=present
  with_items:
    - django-sslserver
    - Werkzeug
    - django-extensions
  become: true
  notify:
    - python code updated

- name: Django app | Dependencies | Pip | Install | CORS requirements
  when: django_cors is defined
  pip: name=django-cors-headers state=present
  become: true
  notify:
    - python code updated

- name: Django app | Dependencies | Memcached | Install Apt libs
  when: django_memcached_locations is defined
  apt: name={{ item }} state=present
  with_items:
    - libsasl2-dev
    - zlib1g-dev
    - libmemcached-dev
  become: true

- name: Django app | Dependencies | Memcached | Install Pylibmc
  when: django_memcached_locations is defined
  pip: name=pylibmc state=present
  become: true
  notify:
    - python code updated

- name: Django app | Source code | Notify handlers about changed code
  when: django_push_mode == "none"
  command: /bin/true
  notify:
    - python code updated

- name: Django app | Settings | Upload settings template
  template:
    src=templates/django_settings.py.j2
    dest={{ django_app_root }}/{{ django_project_module }}/settings.py
  notify:
    - python code updated

- name: Django app | Settings | Append extra settings
  lineinfile:
    path: "{{ django_app_root }}/{{ django_project_module }}/settings.py"
    line: "{{ item.key }} = {{ item.python_construct }}"
  with_items: "{{ django_settings_extra }}"

- name: Django app | Deployment checklist
  django_manage:
    app_path={{ django_app_root }}
    command="check --deploy"
  ignore_errors: yes

- name: Django app | Migrate database
  django_manage:
    app_path={{ django_app_root }}
    command=migrate

- name: Django app | Collect static assets
  django_manage:
    app_path={{ django_app_root }}
    command=collectstatic

- name: Django app | Load initial data
  when: django_initial_data_fixture.load|bool
  django_manage:
    app_path={{ django_app_root }}
    command="loaddata {{ django_initial_data_fixture.path }}"
