# -*- coding: utf-8 -*-
from __future__ import unicode_literals

"""
Setting overrides specific to selected environment.
This file is populated automatically by Ansible deployment script.
"""

import logging
import logging.handlers
from settings_base import *


ALLOWED_HOSTS = [
{% if django_domain_name %}
    '{{ django_domain_name }}',
{% else %}
    '*',
{% endif %}
]


# SECURITY WARNING: don’t let this public key leak.
# Apart from the person who manages your production application
# no one should ever see this key.
# Rotate this key on regular basis.
SECRET_KEY = '{{ django_secret_key }}'


ADMINS = [
    {% for admin in django_admins %}
    ('{{ admin.name }}', '{{ admin.email }}'),
    {% endfor %}
]

{% if django_managers is defined %}
MANAGERS = [
    {% for manager in django_managers %}
    ('{{ manager.name }}', '{{ manager.email }}'),
    {% endfor %}
]
{% endif %}


# Email

{% if django_email is defined %}

{% if django_email.host is defined %}
EMAIL_HOST = '{{ django_email.host }}'
{% endif %}

{% if django_email.port is defined %}
EMAIL_PORT = {{ django_email.port }}
{% endif %}

{% if django_email.user is defined %}
EMAIL_HOST_USER = '{{ django_email.user }}'
{% endif %}

{% if django_email.password is defined %}
EMAIL_HOST_PASSWORD = '{{ django_email.password }}'
{% endif %}

{% if django_email.use_tls is defined %}
{% if django_email.use_tls %}
EMAIL_USE_TLS = True
{% endif %}
{% endif %}

{% endif %}


# Debug

{% if django_debug is defined %}
{% if django_debug %}
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

INSTALLED_APPS += [
    'django_extensions',
    'sslserver',
]
{% endif %}
{% endif %}


# SSL

{% if django_ssl is defined %}
{% if django_ssl %}
# Only work over HTTPS, redirect from plain HTTP
SECURE_SSL_REDIRECT = True

# Make sure Django knows when the request is made over SSL
# IMPORTANT: relies on a corresponding setting in frontend webserver config
# Not having frontend configured for this exact header will make you vulnerable
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTOCOL', 'https')

# POST requests with CSRF protection only work over HTTPS
CSRF_COOKIE_SECURE = True

# Sessions only work over HTTPS
SESSION_COOKIE_SECURE = True
{% endif %}
{% endif %}


# Database

{% if django_sqlite_db_path is defined %}
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': '{{ django_sqlite_db_path }}',
    }
}
{% elif django_db is defined %}
DATABASES = {
    'default': {
        'ENGINE': '{{ django_db.backend }}',
        'NAME': '{{ django_db.name }}',
        'USER': '{{ django_db.user }}',
        'PASSWORD': '{{ django_db.password }}',
        'HOST': '{{ django_db.host }}',
    }
}
{% else %}
raise Exception("Missing database configuration")
{% endif %}


# Static

STATIC_ROOT = '{{ django_static_root }}'
STATIC_URL = '{{ django_static_url }}'


# Logging

import logging.config
from django.utils import log

# Stop Django from overriding logging config with LOGGING setting
LOGGING_CONFIG = None

# Define our logging configuration basing it on Django’s default config
config = log.DEFAULT_LOGGING.copy()

# Ensure admin email tracebacks include detailed information
# by requesting HTML debug output
# NOTE: Email error reports in production may contain sensitive data
try:
    if config['handlers']['mail_admins']['class'].endswith('AdminEmailHandler'):
        config['handlers']['mail_admins']['include_html'] = True
except KeyError:
    pass

# Apply our logging configuration
logging.config.dictConfig(config)

{% if django_log_file is defined %}
{% if django_log_file %}
# Add file-based handler to Django’s catch-all logger

django_logger = logging.getLogger('django')
file_handler = logging.handlers.TimedRotatingFileHandler(
    '{{ django_log_file }}',
    when='W0',
    utc=True)
file_handler.setLevel(logging.{{ django_log_level|upper }})
django_logger.addHandler(file_handler)
{% endif %}
{% endif %}


# Session cookie

{% if django_session_cookie is defined %}
{% if django_session_cookie.name is defined %}
SESSION_COOKIE_NAME = '{{ django_session_cookie.name }}'
{% endif %}

{% if django_session_cookie.domain is defined %}
SESSION_COOKIE_DOMAIN = '{{ django_session_cookie.domain }}'
{% endif %}
{% endif %}


# CORS

{% if django_cors is defined %}

INSTALLED_APPS += [
    'corsheaders',
]

{% if django_cors.allow_credentials is defined %}
{% if django_cors.allow_credentials %}
CORS_ALLOW_CREDENTIALS = True
{% endif %}
{% endif %}

{% if django_cors.origin_whitelist is defined %}
CORS_ORIGIN_WHITELIST = [
    {% for item in django_cors.origin_whitelist %}
    '{{ item }}',
    {% endfor %}
]
{% endif %}

{% if django_cors.expose_headers is defined %}
CORS_EXPOSE_HEADERS = [
    {% for item in django_cors.expose_headers %}
    '{{ item }}',
    {% endfor %}
]
{% endif %}

{% endif %}
