---

- name: ensure pip is installed
  apt: name=python-pip state=installed
  become: true

- name: ensure latest pip is installed
  pip: name=pip state=latest
  become: true

- name: upload app code
  when: django_push_mode == "sync"
  synchronize:
    src: "{{ django_local_repo_root }}"
    dest: "{{ django_app_root }}"
  notify:
    - python code updated

- name: mark code as changed
  when: django_push_mode == "none"
  command: /bin/true
  notify:
    - python code updated

- name: install pip requirements
  pip: requirements={{ django_pip_dependencies }}
  become: true
  notify:
    - python code updated

- name: upload django settings
  template:
    src=templates/django_settings.py.j2
    dest={{ django_app_root }}/{{ django_project_module }}/settings.py
  notify:
    - python code updated

- name: custom django settings
  lineinfile:
    path: "{{ django_app_root }}/{{ django_project_module }}/settings.py"
    line: "{{ item.key }} = {{ item.python_construct }}"
  with_items: "{{ django_settings_extra }}"

- name: deployment checklist
  django_manage:
    app_path={{ django_app_root }}
    command="check --deploy"
  ignore_errors: yes

- name: set in place db schema
  django_manage:
    app_path={{ django_app_root }}
    command={{ item }}
  with_items:
    - migrate
    - collectstatic

- name: load initial data
  when: django_initial_data_fixture.load|bool
  django_manage:
    app_path={{ django_app_root }}
    command="loaddata {{ django_initial_data_fixture.path }}"
